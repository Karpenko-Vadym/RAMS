@model RAMS.ViewModels.UserEditProfileViewModel
<!-- EDIT USER PROFILE PARTIAL -->
@using System.Security.Claims;

@{
    

    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "edit-user-profile-modal-body-div",
        OnBegin = "OnAjaxBegin",
        OnSuccess = "OnAjaxSuccess",
        OnFailure = "OnAjaxFailure",
        OnComplete = "OnAjaxComplete",
        HttpMethod = "POST"
    };

    var identity = User.Identity as ClaimsIdentity;
}

@if (Model != null)
{
    <div class="btn-group btn-group-justified" role="group">
        <div class="btn-group" role="group">
            <input type="button" class="btn btn-info" data-user-name="@Model.UserName" data-user-type="@Model.UserType" data-toggle="modal" data-target="#change-password-modal" value="Change Password" />
        </div>
    </div>

    <div class="vertical-padding-24"></div>

    <div class="well well-lg bottom-margin-0 background-white">

        @using (Ajax.BeginForm("EditUserProfile", "Account", new { Area = "" }, ajaxOptions, new { id = "edit-user-profile-form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.UserName)
            @Html.HiddenFor(model => model.CurrentFullName)
            @Html.HiddenFor(model => model.CurrentEmail)
            @Html.HiddenFor(model => model.JobTitle)
            @Html.HiddenFor(model => model.Company)
            @Html.HiddenFor(model => model.Role)
            @Html.HiddenFor(model => model.UserStatus)
            @Html.HiddenFor(model => model.PhoneNumber)
            @Html.HiddenFor(model => model.DepartmentId)
            @Html.HiddenFor(model => model.AgentStatus)
            @Html.HiddenFor(model => model.UserType)
            @Html.HiddenFor(model => model.Timestamp)

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        <h5>@Html.DisplayFor(model => model.UserName)</h5>
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (identity.HasClaim("FullName", "superuser"))
                {
                    @Html.HiddenFor(model => model.FirstName)
                    @Html.HiddenFor(model => model.LastName)

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <h5>@Html.DisplayFor(model => model.FirstName)</h5>
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            <h5>@Html.DisplayFor(model => model.LastName)</h5>
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        <h5>@Html.DisplayFor(model => model.JobTitle)</h5>
                        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-7">
                        <h5>@Html.DisplayFor(model => model.Company)</h5>
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group bottom-margin-0">
                    <div class="col-md-offset-3 col-lg-offset-3 col-md-6 col-lg-6">
                        <input type="submit" value="Update User Details" class="btn btn-danger btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class='alert alert-danger bottom-margin-0' role='alert'>
        <div class='text-center'><h4><strong>User information is not available.</strong></h4></div>
        <div class="row">
            <div class='col-md-12'><p></p></div><div class='col-md-offset-1 col-md-11'>Please try again in a moment...</div>
            <div class='col-md-offset-1 col-md-11'>If you encounter this issue again, please contact System Administrator with detailed description of the issue and steps to reproduce the it.</div>
        </div>
    </div>
}
<!-- END OF EDIT USER PROFILE PARTIAL -->
